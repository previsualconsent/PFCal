//
// File generated by rootcint at Wed Jan 29 10:26:30 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIdict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void HGCSSSimHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSSimHit(void *p = 0);
   static void *newArray_HGCSSSimHit(Long_t size, void *p);
   static void delete_HGCSSSimHit(void *p);
   static void deleteArray_HGCSSSimHit(void *p);
   static void destruct_HGCSSSimHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSSimHit*)
   {
      ::HGCSSSimHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSSimHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSSimHit", ::HGCSSSimHit::Class_Version(), "./include/HGCSSSimHit.hh", 30,
                  typeid(::HGCSSSimHit), DefineBehavior(ptr, ptr),
                  &::HGCSSSimHit::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSSimHit) );
      instance.SetNew(&new_HGCSSSimHit);
      instance.SetNewArray(&newArray_HGCSSSimHit);
      instance.SetDelete(&delete_HGCSSSimHit);
      instance.SetDeleteArray(&deleteArray_HGCSSSimHit);
      instance.SetDestructor(&destruct_HGCSSSimHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSSimHit*)
   {
      return GenerateInitInstanceLocal((::HGCSSSimHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HGCSSRecoHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGCSSRecoHit(void *p = 0);
   static void *newArray_HGCSSRecoHit(Long_t size, void *p);
   static void delete_HGCSSRecoHit(void *p);
   static void deleteArray_HGCSSRecoHit(void *p);
   static void destruct_HGCSSRecoHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HGCSSRecoHit*)
   {
      ::HGCSSRecoHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGCSSRecoHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGCSSRecoHit", ::HGCSSRecoHit::Class_Version(), "./include/HGCSSRecoHit.hh", 11,
                  typeid(::HGCSSRecoHit), DefineBehavior(ptr, ptr),
                  &::HGCSSRecoHit::Dictionary, isa_proxy, 4,
                  sizeof(::HGCSSRecoHit) );
      instance.SetNew(&new_HGCSSRecoHit);
      instance.SetNewArray(&newArray_HGCSSRecoHit);
      instance.SetDelete(&delete_HGCSSRecoHit);
      instance.SetDeleteArray(&deleteArray_HGCSSRecoHit);
      instance.SetDestructor(&destruct_HGCSSRecoHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HGCSSRecoHit*)
   {
      return GenerateInitInstanceLocal((::HGCSSRecoHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *HGCSSSimHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSSimHit::Class_Name()
{
   return "HGCSSSimHit";
}

//______________________________________________________________________________
const char *HGCSSSimHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSSimHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSSimHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSSimHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSSimHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HGCSSRecoHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HGCSSRecoHit::Class_Name()
{
   return "HGCSSRecoHit";
}

//______________________________________________________________________________
const char *HGCSSRecoHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGCSSRecoHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGCSSRecoHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGCSSRecoHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HGCSSRecoHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void HGCSSSimHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSSimHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSSimHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSSimHit::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSSimHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSSimHit.
      TClass *R__cl = ::HGCSSSimHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_", &energy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time_", &time_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_", &layer_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellid_", &cellid_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nGammas_", &nGammas_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nElectrons_", &nElectrons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMuons_", &nMuons_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHadrons_", &nHadrons_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSSimHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSSimHit : new ::HGCSSSimHit;
   }
   static void *newArray_HGCSSSimHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSSimHit[nElements] : new ::HGCSSSimHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSSimHit(void *p) {
      delete ((::HGCSSSimHit*)p);
   }
   static void deleteArray_HGCSSSimHit(void *p) {
      delete [] ((::HGCSSSimHit*)p);
   }
   static void destruct_HGCSSSimHit(void *p) {
      typedef ::HGCSSSimHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSSimHit

//______________________________________________________________________________
void HGCSSRecoHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGCSSRecoHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HGCSSRecoHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(HGCSSRecoHit::Class(),this);
   }
}

//______________________________________________________________________________
void HGCSSRecoHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGCSSRecoHit.
      TClass *R__cl = ::HGCSSRecoHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_", &energy_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcCounts_", &adcCounts_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_", &layer_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellid_", &cellid_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noiseFrac_", &noiseFrac_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HGCSSRecoHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSRecoHit : new ::HGCSSRecoHit;
   }
   static void *newArray_HGCSSRecoHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HGCSSRecoHit[nElements] : new ::HGCSSRecoHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGCSSRecoHit(void *p) {
      delete ((::HGCSSRecoHit*)p);
   }
   static void deleteArray_HGCSSRecoHit(void *p) {
      delete [] ((::HGCSSRecoHit*)p);
   }
   static void destruct_HGCSSRecoHit(void *p) {
      typedef ::HGCSSRecoHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HGCSSRecoHit

namespace ROOT {
   void vectorlEHGCSSRecoHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSRecoHitgR_Dictionary();
   static void *new_vectorlEHGCSSRecoHitgR(void *p = 0);
   static void *newArray_vectorlEHGCSSRecoHitgR(Long_t size, void *p);
   static void delete_vectorlEHGCSSRecoHitgR(void *p);
   static void deleteArray_vectorlEHGCSSRecoHitgR(void *p);
   static void destruct_vectorlEHGCSSRecoHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSRecoHit>*)
   {
      vector<HGCSSRecoHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSRecoHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSRecoHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSRecoHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSRecoHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSRecoHit>) );
      instance.SetNew(&new_vectorlEHGCSSRecoHitgR);
      instance.SetNewArray(&newArray_vectorlEHGCSSRecoHitgR);
      instance.SetDelete(&delete_vectorlEHGCSSRecoHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSRecoHitgR);
      instance.SetDestructor(&destruct_vectorlEHGCSSRecoHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSRecoHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSRecoHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSRecoHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSRecoHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSRecoHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSRecoHit> : new vector<HGCSSRecoHit>;
   }
   static void *newArray_vectorlEHGCSSRecoHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSRecoHit>[nElements] : new vector<HGCSSRecoHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSRecoHitgR(void *p) {
      delete ((vector<HGCSSRecoHit>*)p);
   }
   static void deleteArray_vectorlEHGCSSRecoHitgR(void *p) {
      delete [] ((vector<HGCSSRecoHit>*)p);
   }
   static void destruct_vectorlEHGCSSRecoHitgR(void *p) {
      typedef vector<HGCSSRecoHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSRecoHit>

namespace ROOT {
   void vectorlEHGCSSSimHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHGCSSSimHitgR_Dictionary();
   static void *new_vectorlEHGCSSSimHitgR(void *p = 0);
   static void *newArray_vectorlEHGCSSSimHitgR(Long_t size, void *p);
   static void delete_vectorlEHGCSSSimHitgR(void *p);
   static void deleteArray_vectorlEHGCSSSimHitgR(void *p);
   static void destruct_vectorlEHGCSSSimHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HGCSSSimHit>*)
   {
      vector<HGCSSSimHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HGCSSSimHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HGCSSSimHit>", -2, "prec_stl/vector", 49,
                  typeid(vector<HGCSSSimHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHGCSSSimHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<HGCSSSimHit>) );
      instance.SetNew(&new_vectorlEHGCSSSimHitgR);
      instance.SetNewArray(&newArray_vectorlEHGCSSSimHitgR);
      instance.SetDelete(&delete_vectorlEHGCSSSimHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHGCSSSimHitgR);
      instance.SetDestructor(&destruct_vectorlEHGCSSSimHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HGCSSSimHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HGCSSSimHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHGCSSSimHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HGCSSSimHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHGCSSSimHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSSimHit> : new vector<HGCSSSimHit>;
   }
   static void *newArray_vectorlEHGCSSSimHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HGCSSSimHit>[nElements] : new vector<HGCSSSimHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHGCSSSimHitgR(void *p) {
      delete ((vector<HGCSSSimHit>*)p);
   }
   static void deleteArray_vectorlEHGCSSSimHitgR(void *p) {
      delete [] ((vector<HGCSSSimHit>*)p);
   }
   static void destruct_vectorlEHGCSSSimHitgR(void *p) {
      typedef vector<HGCSSSimHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HGCSSSimHit>

/********************************************************
* src/dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/HGCSSSimHit.hh");
  G__add_compiledheader("include/HGCSSRecoHit.hh");
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HGCSSSimHit */
static int G__dict_408_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSimHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSimHit[n];
     } else {
       p = new((void*) gvp) HGCSSSimHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSSimHit;
     } else {
       p = new((void*) gvp) HGCSSSimHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSimHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGCSSSimHit(*(G4SiHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HGCSSSimHit(*(G4SiHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->layer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->layer(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->cellid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nGammas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nElectrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nMuons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->nHadrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->numberOfParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->gFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->eFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->muFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->hadFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->Add(*(G4SiHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->encodeCellId((const bool) G__int(libp->para[0]), (const bool) G__int(libp->para[1])
, (const unsigned int) G__int(libp->para[2]), (const unsigned int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGCSSSimHit*) G__getstructoffset())->get_x_side());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGCSSSimHit*) G__getstructoffset())->get_y_side());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->get_x_cell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->get_y_cell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->get_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSSimHit*) G__getstructoffset())->get_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSSimHit*) G__getstructoffset())->getGranularity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSSimHit*) G__getstructoffset())->PrintGeometry(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSSimHit*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSSimHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSimHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSSimHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSSimHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSSimHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSSimHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSimHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSSimHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSSimHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_408_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSSimHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_408_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSSimHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSSimHit(*(HGCSSSimHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSSimHit G__THGCSSSimHit;
static int G__dict_408_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSSimHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSSimHit*) (soff+(sizeof(HGCSSSimHit)*i)))->~G__THGCSSSimHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSSimHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSSimHit*) (soff))->~G__THGCSSSimHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_408_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSSimHit* dest = (HGCSSSimHit*) G__getstructoffset();
   *dest = *(HGCSSSimHit*) libp->para[0].ref;
   const HGCSSSimHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */
static int G__dict_410_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->at((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference obj = ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->at((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->resize((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->resize((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]), *((HGCSSSimHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->operator[]((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference obj = ((const vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->operator[]((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >;
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]), *(HGCSSSimHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]), *(HGCSSSimHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSSimHit,allocator<HGCSSSimHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSSimHit,allocator<HGCSSSimHit> >(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSSimHit,allocator<HGCSSSimHit> >& obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->operator=(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->reserve((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSSimHit& obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSSimHit& obj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->push_back(*(HGCSSSimHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->swap(*(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator* pobj;
         vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator xobj = ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->insert(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), *(HGCSSSimHit*) libp->para[1].ref);
         pobj = new vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->insert(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->insert(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), (vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type) G__int(libp->para[1])
, *(HGCSSSimHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->erase(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->erase(*((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_410_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSSimHit,allocator<HGCSSSimHit> > G__TvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR;
static int G__dict_410_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) (soff+(sizeof(vector<HGCSSSimHit,allocator<HGCSSSimHit> >)*i)))->~G__TvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSSimHit,allocator<HGCSSSimHit> >*) (soff))->~G__TvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGCSSRecoHit */
static int G__dict_413_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoHit[n];
     } else {
       p = new((void*) gvp) HGCSSRecoHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoHit;
     } else {
       p = new((void*) gvp) HGCSSRecoHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoHit(*(HGCSSSimHit*) libp->para[0].ref, (const unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HGCSSRecoHit(*(HGCSSSimHit*) libp->para[0].ref, (const unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGCSSRecoHit(*(HGCSSSimHit*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) HGCSSRecoHit(*(HGCSSSimHit*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->energy(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->adcCounts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->adcCounts(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->layer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->layer(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->cellid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->cellid(*(unsigned int*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->fullcellid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->noiseFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->noiseFraction(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->Add(*(HGCSSSimHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->encodeCellId((const bool) G__int(libp->para[0]), (const bool) G__int(libp->para[1])
, (const unsigned int) G__int(libp->para[2]), (const unsigned int) G__int(libp->para[3])
, (const unsigned int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGCSSRecoHit*) G__getstructoffset())->get_x_side());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGCSSRecoHit*) G__getstructoffset())->get_y_side());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->get_x_cell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->get_y_cell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->get_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HGCSSRecoHit*) G__getstructoffset())->get_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HGCSSRecoHit*) G__getstructoffset())->getGranularity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HGCSSRecoHit*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGCSSRecoHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGCSSRecoHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGCSSRecoHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HGCSSRecoHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGCSSRecoHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSRecoHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGCSSRecoHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_413_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGCSSRecoHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dict_413_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGCSSRecoHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGCSSRecoHit(*(HGCSSRecoHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGCSSRecoHit G__THGCSSRecoHit;
static int G__dict_413_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGCSSRecoHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGCSSRecoHit*) (soff+(sizeof(HGCSSRecoHit)*i)))->~G__THGCSSRecoHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGCSSRecoHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGCSSRecoHit*) (soff))->~G__THGCSSRecoHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dict_413_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGCSSRecoHit* dest = (HGCSSRecoHit*) G__getstructoffset();
   *dest = *(HGCSSRecoHit*) libp->para[0].ref;
   const HGCSSRecoHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */
static int G__dict_415_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->at((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference obj = ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->at((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->begin();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->end();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->rend();
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->resize((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->resize((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]), *((HGCSSRecoHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->operator[]((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference obj = ((const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->operator[]((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >[n];
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >;
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]), *(HGCSSRecoHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]), *(HGCSSRecoHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >& obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->operator=(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->reserve((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSRecoHit& obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGCSSRecoHit& obj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->push_back(*(HGCSSRecoHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->swap(*(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator* pobj;
         vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator xobj = ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), *(HGCSSRecoHit*) libp->para[1].ref);
         pobj = new vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->insert(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), (vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type) G__int(libp->para[1])
, *(HGCSSRecoHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->erase(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->erase(*((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[0])), *((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_415_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > G__TvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR;
static int G__dict_415_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) (soff+(sizeof(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >)*i)))->~G__TvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*) (soff))->~G__TvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HGCSSSimHit */

/* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */

/* HGCSSRecoHit */

/* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<G4SiHit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSSimHit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSSimHit),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGCSSRecoHit>",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),1,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit),257,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HGCSSSimHit */
static void G__setup_memvarHGCSSSimHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   { HGCSSSimHit *p; p=(HGCSSSimHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"time_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"layer_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"cellid_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nGammas_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nElectrons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nMuons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nHadrons_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */
static void G__setup_memvarvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   { vector<HGCSSSimHit,allocator<HGCSSSimHit> > *p; p=(vector<HGCSSSimHit,allocator<HGCSSSimHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HGCSSRecoHit */
static void G__setup_memvarHGCSSRecoHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   { HGCSSRecoHit *p; p=(HGCSSRecoHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"energy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"adcCounts_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"layer_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"cellid_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"noiseFrac_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */
static void G__setup_memvarvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   { vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > *p; p=(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHGCSSSimHit(void) {
   /* HGCSSSimHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSSimHit));
   G__memfunc_setup("HGCSSSimHit",966,G__dict_408_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGCSSSimHit",966,G__dict_408_0_2, 105, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 0, 1, 1, 1, 0, "u 'G4SiHit' - 11 - aSiHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_408_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__dict_408_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_408_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_408_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellid",621,G__dict_408_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nGammas",708,G__dict_408_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nElectrons",1053,G__dict_408_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nMuons",640,G__dict_408_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHadrons",829,G__dict_408_0_11, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfParticles",1765,G__dict_408_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gFrac",483,G__dict_408_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eFrac",481,G__dict_408_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muFrac",606,G__dict_408_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hadFrac",681,G__dict_408_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__dict_408_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'G4SiHit' - 11 - aSiHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("encodeCellId",1179,G__dict_408_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - - 10 - x_side g - - 10 - y_side "
"h - - 10 - - h - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x_side",1051,G__dict_408_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y_side",1052,G__dict_408_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x_cell",1046,G__dict_408_0_21, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y_cell",1047,G__dict_408_0_22, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x",535,G__dict_408_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y",536,G__dict_408_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGranularity",1490,G__dict_408_0_25, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintGeometry",1369,G__dict_408_0_26, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_408_0_27, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_408_0_28, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSSimHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_408_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSimHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_408_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSSimHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_408_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSSimHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_408_0_32, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_408_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_408_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_408_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_408_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSimHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_408_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSSimHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_408_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSSimHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_408_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSSimHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSSimHit", 966, G__dict_408_0_40, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 0, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSSimHit", 1092, G__dict_408_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_408_0_42, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 1, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR(void) {
   /* vector<HGCSSSimHit,allocator<HGCSSSimHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR));
   G__memfunc_setup("at",213,G__dict_410_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_410_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_410_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_410_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_410_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_410_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_410_0_7, 107, -1, G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_410_0_8, 107, -1, G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_410_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_410_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - sz u 'HGCSSSimHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_410_0_11, 107, -1, G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_410_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_410_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_410_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), G__defined_typename("vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_410_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_410_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n u 'HGCSSSimHit' - 11 'HGCSSSimHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_410_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSSimHit,allocator<HGCSSSimHit> >",3872,G__dict_410_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - first u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_410_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_410_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_410_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_410_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSSimHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_410_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_410_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_410_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position u 'HGCSSSimHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_410_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - first "
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_410_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position k - 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::size_type' 0 - n "
"u 'HGCSSSimHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_410_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_410_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_410_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - first u 'vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_410_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSSimHit,allocator<HGCSSSimHit> >", 3998, G__dict_410_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGCSSRecoHit(void) {
   /* HGCSSRecoHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit));
   G__memfunc_setup("HGCSSRecoHit",1062,G__dict_413_0_1, 105, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGCSSRecoHit",1062,G__dict_413_0_2, 105, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 0, 2, 1, 1, 0, 
"u 'HGCSSSimHit' - 11 - aSimHit h - - 10 '1' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_413_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__dict_413_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adcCounts",932,G__dict_413_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adcCounts",932,G__dict_413_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - adcCounts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_413_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("layer",541,G__dict_413_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellid",621,G__dict_413_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cellid",621,G__dict_413_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fullcellid",1056,G__dict_413_0_11, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("noiseFraction",1364,G__dict_413_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("noiseFraction",1364,G__dict_413_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 11 - aFrac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__dict_413_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSSimHit' - 11 - aSimHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("encodeCellId",1179,G__dict_413_0_15, 121, -1, -1, 0, 5, 1, 1, 0, 
"g - - 10 - x_side g - - 10 - y_side "
"h - - 10 - - h - - 10 - - "
"h - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x_side",1051,G__dict_413_0_16, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y_side",1052,G__dict_413_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x_cell",1046,G__dict_413_0_18, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y_cell",1047,G__dict_413_0_19, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x",535,G__dict_413_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y",536,G__dict_413_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGranularity",1490,G__dict_413_0_22, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__dict_413_0_23, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - aOs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dict_413_0_24, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGCSSRecoHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dict_413_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dict_413_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGCSSRecoHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dict_413_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGCSSRecoHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__dict_413_0_28, 85, G__get_linked_tagnum(&G__dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__dict_413_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__dict_413_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dict_413_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dict_413_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dict_413_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSRecoHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dict_413_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGCSSRecoHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dict_413_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGCSSRecoHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGCSSRecoHit", 1062, G__dict_413_0_36, (int) ('i'), G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGCSSRecoHit", 1188, G__dict_413_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dict_413_0_38, (int) ('u'), G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 1, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR(void) {
   /* vector<HGCSSRecoHit,allocator<HGCSSRecoHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR));
   G__memfunc_setup("at",213,G__dict_415_0_1, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__dict_415_0_2, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_415_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_415_0_4, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_415_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_415_0_6, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_415_0_7, 107, -1, G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_415_0_8, 107, -1, G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_415_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_415_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - sz u 'HGCSSRecoHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_415_0_11, 107, -1, G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_415_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_415_0_13, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_415_0_14, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), G__defined_typename("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_415_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_415_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n u 'HGCSSRecoHit' - 11 'HGCSSRecoHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_415_0_17, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >",4064,G__dict_415_0_18, 105, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - first u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_415_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_415_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_415_0_21, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_415_0_22, 117, G__get_linked_tagnum(&G__dictLN_HGCSSRecoHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_415_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGCSSRecoHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_415_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_415_0_25, 117, G__get_linked_tagnum(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position u 'HGCSSRecoHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_415_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - first "
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_415_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position k - 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::size_type' 0 - n "
"u 'HGCSSRecoHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_415_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_415_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_415_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - first u 'vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_415_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >", 4190, G__dict_415_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_G4SiHit = { "G4SiHit" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR = { "vector<G4SiHit,allocator<G4SiHit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<G4SiHit,allocator<G4SiHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSSimHit = { "HGCSSSimHit" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR = { "vector<HGCSSSimHit,allocator<HGCSSSimHit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator = { "vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSSimHit,allocator<HGCSSSimHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_HGCSSRecoHit = { "HGCSSRecoHit" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR = { "vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator = { "vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_TClass.tagnum = -1 ;
  G__dictLN_TBuffer.tagnum = -1 ;
  G__dictLN_TMemberInspector.tagnum = -1 ;
  G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_G4SiHit.tagnum = -1 ;
  G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_HGCSSSimHit.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_HGCSSRecoHit.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_G4SiHit);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEG4SiHitcOallocatorlEG4SiHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEG4SiHitcOallocatorlEG4SiHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSSimHit),sizeof(HGCSSSimHit),-1,296192,(char*)NULL,G__setup_memvarHGCSSSimHit,G__setup_memfuncHGCSSSimHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR),sizeof(vector<HGCSSSimHit,allocator<HGCSSSimHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR,G__setup_memfuncvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSSimHitcOallocatorlEHGCSSSimHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_HGCSSRecoHit),sizeof(HGCSSRecoHit),-1,296192,(char*)NULL,G__setup_memvarHGCSSRecoHit,G__setup_memfuncHGCSSRecoHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR),sizeof(vector<HGCSSRecoHit,allocator<HGCSSRecoHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR,G__setup_memfuncvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEHGCSSRecoHitcOallocatorlEHGCSSRecoHitgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

